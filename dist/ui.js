(()=>{"use strict";const e=["mersenne.rand","mersenne.seed","mersenne.seed_array","random.number","random.float","random.arrayElement","random.arrayElements","random.objectElement","random.uuid","random.boolean","random.word","random.words","random.image","random.locale","random.alpha","random.alphaNumeric","random.hexaDecimal","helpers.randomize","helpers.slugify","helpers.replaceSymbolWithNumber","helpers.replaceSymbols","helpers.replaceCreditCardSymbols","helpers.repeatString","helpers.regexpStyleStringParse","helpers.shuffle","helpers.mustache","helpers.createCard","helpers.contextualCard","helpers.userCard","helpers.createTransaction","name.firstName","name.lastName","name.middleName","name.findName","name.jobTitle","name.gender","name.prefix","name.suffix","name.title","name.jobDescriptor","name.jobArea","name.jobType","address.zipCode","address.zipCodeByState","address.city","address.cityPrefix","address.citySuffix","address.cityName","address.streetName","address.streetAddress","address.streetSuffix","address.streetPrefix","address.secondaryAddress","address.county","address.country","address.countryCode","address.state","address.stateAbbr","address.latitude","address.longitude","address.direction","address.cardinalDirection","address.ordinalDirection","address.nearbyGPSCoordinate","address.timeZone","animal.dog","animal.cat","animal.snake","animal.bear","animal.lion","animal.cetacean","animal.horse","animal.bird","animal.cow","animal.fish","animal.crocodilia","animal.insect","animal.rabbit","animal.type","company.suffixes","company.companyName","company.companySuffix","company.catchPhrase","company.bs","company.catchPhraseAdjective","company.catchPhraseDescriptor","company.catchPhraseNoun","company.bsAdjective","company.bsBuzz","company.bsNoun","finance.account","finance.accountName","finance.routingNumber","finance.mask","finance.amount","finance.transactionType","finance.currencyCode","finance.currencyName","finance.currencySymbol","finance.bitcoinAddress","finance.litecoinAddress","finance.creditCardNumber","finance.creditCardCVV","finance.ethereumAddress","finance.iban","finance.bic","finance.transactionDescription","image.image","image.avatar","image.imageUrl","image.abstract","image.animals","image.business","image.cats","image.city","image.food","image.nightlife","image.fashion","image.people","image.nature","image.sports","image.technics","image.transport","image.dataUri","lorem.word","lorem.words","lorem.sentence","lorem.slug","lorem.sentences","lorem.paragraph","lorem.paragraphs","lorem.text","lorem.lines","hacker.abbreviation","hacker.adjective","hacker.noun","hacker.verb","hacker.ingverb","hacker.phrase","internet.avatar","internet.email","internet.exampleEmail","internet.userName","internet.protocol","internet.httpMethod","internet.url","internet.domainName","internet.domainSuffix","internet.domainWord","internet.ip","internet.ipv6","internet.port","internet.userAgent","internet.color","internet.mac","internet.password","database.column","database.type","database.collation","database.engine","phone.phoneNumber","phone.phoneNumberFormat","phone.phoneFormats","date.past","date.future","date.between","date.betweens","date.recent","date.soon","date.month","date.weekday","time.recent","commerce.color","commerce.department","commerce.productName","commerce.price","commerce.productAdjective","commerce.productMaterial","commerce.product","commerce.productDescription","system.fileName","system.commonFileName","system.mimeType","system.commonFileType","system.commonFileExt","system.fileType","system.fileExt","system.directoryPath","system.filePath","system.semver","git.branch","git.commitEntry","git.commitMessage","git.commitSha","git.shortSha","vehicle.vehicle","vehicle.manufacturer","vehicle.model","vehicle.type","vehicle.fuel","vehicle.vin","vehicle.color","vehicle.vrm","vehicle.bicycle","music.genre","datatype.number","datatype.float","datatype.datetime","datatype.string","datatype.uuid","datatype.boolean","datatype.hexaDecimal","datatype.json","datatype.array"];var t;const o={selectedCells:new Set,isDragging:!1,startCell:null,endCell:null,componentProps:{},cellProperties:new Map,gridCols:5,gridRows:5,hasComponent:!1,mode:"selection",currentEditingCell:null,applyMode:"column",hoverTimeout:null,tooltip:document.createElement("div"),selectedSize:null,selectedComponent:null,sizeConfirmed:!1,componentWidth:void 0,headerCellComponent:null,footerComponent:null,tableFrameId:void 0};let n={};const l=document.getElementById("fakerMethodInput"),s=document.getElementById("fakerDropdown");o.tooltip.className="cell-tooltip";let a=!1;const i=[{name:"Cell text#12234:32",label:"Header Text",type:"TEXT"},{name:"Size",label:"Size",type:"VARIANT",options:["Extra large","Large","Small"]},{name:"State",label:"State",type:"VARIANT",options:["Enabled","Disabled","Focus"]},{name:"Sortable",label:"Sortable",type:"VARIANT",options:["True","False"],defaultValue:"False"},{name:"Sorted",label:"Sorted",type:"VARIANT",options:["Ascending","Descending"],defaultValue:"Ascending",dependsOn:"Sortable",showWhen:"True"}],c=[{name:"Total items#12006:49",label:"Total items",type:"TEXT"},{name:"Current page#12006:39",label:"Current page",type:"TEXT"},{name:"Total pages#12006:29",label:"Total pages",type:"TEXT"},{name:"Type",label:"Type",type:"VARIANT",options:["Advanced","Simple"]},{name:"Size",label:"Size",type:"VARIANT",options:["Large","Small"]}];function r(){const e=n.grid;e.innerHTML="",e.style.gridTemplateColumns=`repeat(${o.gridCols}, 30px)`;for(let t=1;t<=o.gridRows;t++)for(let n=1;n<=o.gridCols;n++){const o=document.createElement("div");o.className="cell",o.dataset.row=String(t),o.dataset.col=String(n),o.textContent=`${t},${n}`,o.addEventListener("click",()=>{x(`${t},${n}`)}),e.appendChild(o)}!function(){const e=document.getElementById("headerGrid");if(e){e.innerHTML="",e.style.setProperty("--header-cols",String(o.gridCols));for(let t=1;t<=o.gridCols;t++){const o=document.createElement("div");o.className="header-cell",o.textContent=`H${t}`,o.addEventListener("click",()=>{x(`header-${t}`)}),e.appendChild(o)}}const t=document.getElementById("footerGrid");if(t){t.innerHTML="",t.style.setProperty("--footer-cols",String(o.gridCols));const e=document.createElement("div");e.className="footer-cell",e.textContent="Footer",e.style.gridColumn=`span ${o.gridCols}`,e.addEventListener("click",()=>{x("footer")}),t.appendChild(e)}}(),k()}function d(){console.log(`[DEBUG] Apply option clicked: ${this.dataset.apply}`),console.log("[DEBUG] Current element:",this),console.log("[DEBUG] Element dataset:",this.dataset),console.log("[DEBUG] Element text content:",this.textContent),console.log("[DEBUG] Element classes before:",this.className),document.querySelectorAll(".apply-option").forEach(e=>{e.classList.remove("active"),console.log("[DEBUG] Removed active from:",e.textContent)}),this.classList.add("active"),console.log("[DEBUG] Added active to:",this.textContent),console.log("[DEBUG] Element classes after:",this.className);const e=this.dataset.apply;o.applyMode=e,console.log(`[DEBUG] Apply mode changed to: ${o.applyMode}`),"cell"===o.applyMode||"column"===o.applyMode?(n.colWidthContainer.style.display="block",console.log(`[DEBUG] Showing column width option for ${o.applyMode} mode`)):(n.colWidthContainer.style.display="none",console.log(`[DEBUG] Hiding column width option for ${o.applyMode} mode`)),console.log(`[DEBUG] Apply mode changed to: ${o.applyMode} - no re-rendering needed`)}function p(e){o.mode=e,document.body.classList.remove("selection-mode","edit-mode"),document.body.classList.add(`${e}-mode`),o.isDragging=!1,n.gridHighlight.style.display="none",m(),"column"===o.applyMode&&n.colWidthInput&&(n.colWidthInput.style.display="inline-block")}function m(){o.hasComponent&&o.sizeConfirmed?n.actionButtons.style.display="flex":n.actionButtons.style.display="none"}function u(){o.cellProperties.clear(),o.selectedCells.clear(),o.currentEditingCell=null,o.sizeConfirmed=!1,I(),b("All cell properties have been reset.","success")}function y(){n.propertyEditor.style.opacity="0",n.propertyEditorOverlay.style.display="none",setTimeout(()=>{n.propertyEditor.style.display="none",o.currentEditingCell=null},300)}function g(e){return o.cellProperties.has(e)||o.cellProperties.set(e,{properties:{}}),o.cellProperties.get(e)}function h(){var e,t,l,s,a,i;C("Generating table...");const c={};for(let e=1;e<=o.gridRows;e++)for(let t=1;t<=o.gridCols;t++){const n=`${e},${t}`,l=`${e-1}-${t-1}`,s=o.cellProperties.get(n);c[l]=s||{properties:{}}}for(let e=1;e<=o.gridCols;e++){const t=`header-${e}`,n=o.cellProperties.get(t);n&&(c[t]=n)}const r=o.cellProperties.get("footer");r&&(c.footer=r);const d="Update Table"===n.createTableBtn.textContent,p=parseInt((null===(e=document.getElementById("scanRowsInput"))||void 0===e?void 0:e.value)||String(o.gridRows),10),m=parseInt((null===(t=document.getElementById("scanColsInput"))||void 0===t?void 0:t.value)||String(o.gridCols),10),u=null===(l=document.getElementById("scanHeaderToggle"))||void 0===l?void 0:l.checked,y=null===(s=document.getElementById("scanFooterToggle"))||void 0===s?void 0:s.checked,g=null===(a=document.getElementById("scanSelectableToggle"))||void 0===a?void 0:a.checked,h=null===(i=document.getElementById("scanExpandableToggle"))||void 0===i?void 0:i.checked,f={type:d?"update-table":"create-table-from-scan",tableId:d?o.tableFrameId:null,rows:p,cols:m,cellProps:c,includeHeader:u,includeFooter:y,includeSelectable:g,includeExpandable:h};console.log(`🚀 Sending to Figma (${d?"Update":"Create"}):`,f),console.log("🚀 cellProps keys:",Object.keys(c)),parent.postMessage({pluginMessage:f},"*")}function C(e){n.loader.style.display="flex",n.loaderText.textContent=e}function f(){n.loader.style.display="none",n.loaderText.textContent=""}function b(e,t){n.statusMessage.textContent=e,n.statusMessage.className=`status ${t}`}function E(){clearTimeout(o.hoverTimeout),o.tooltip.style.display="none"}function v(e,t){var o,n;const l=document.getElementById("dynamicPropertyFields");if(!l)return;l.innerHTML="",l.style.border="",l.style.background="";let s=0;console.log("[DEBUG] renderDynamicPropertyFieldsFromModel called with props:",t);for(const a of e){const{name:i,label:c,type:r,options:d,defaultValue:p,dependsOn:m,showWhen:u}=a;if(m&&void 0!==u){const e=t[m];if(console.log(`[DEBUG] Checking dependency for ${i}: dependsOn=${m}, showWhen=${u}, currentValue=${e}`),String(e)!==String(u)){console.log(`[DEBUG] Skipping ${i} - dependency condition not met`);continue}console.log(`[DEBUG] Showing ${i} - dependency condition met`)}const y=null!==(n=null!==(o=t[i])&&void 0!==o?o:p)&&void 0!==n?n:"";let g=null;if("VARIANT"===r){g=document.createElement("div"),g.className="property-field";const o=document.createElement("select");o.className="styled-input",o.id=`dynamic-${i}`;for(const e of d||[]){const t=document.createElement("option");t.value=e,t.textContent=e,String(y)===e&&(t.selected=!0),o.appendChild(t)}const n=document.createElement("label");n.textContent=c,g.appendChild(n),g.appendChild(o),o.addEventListener("change",()=>{t[i]=o.value,console.log(`[DEBUG] Field ${i} changed to: ${o.value}`);const n=e.some(e=>e.dependsOn===i);if(n){console.log(`[DEBUG] Field ${i} has dependent fields, re-rendering form`);const o=Object.assign({},t);for(const t of e){const e=document.getElementById(`dynamic-${t.name}`);e&&("BOOLEAN"===t.type?o[t.name]=e.checked:o[t.name]=e.value)}console.log("[DEBUG] Collected current values before re-render:",o),v(e,o)}})}else if("BOOLEAN"===r){g=document.createElement("div"),g.className="property-field checkbox";const e=document.createElement("input");e.type="checkbox",e.id=`dynamic-${i}`,e.checked=!!y;const t=document.createElement("label");t.textContent=c,g.appendChild(e),g.appendChild(t)}else if("TEXT"===r){g=document.createElement("div"),g.className="property-field";const e=document.createElement("label");e.textContent=c;const t=document.createElement("input");t.type="text",t.className="styled-input",t.id=`dynamic-${i}`,t.value=y,g.appendChild(e),g.appendChild(t)}g&&(l.appendChild(g),s++)}console.log("[DEBUG] renderDynamicPropertyFieldsFromModel created fields:",s),console.log("[DEBUG] Final props state:",t)}function x(e){if("edit"===o.mode){if(!o.selectedComponent&&!e.startsWith("header-")&&"footer"!==e){console.log("[openPropertyEditor] No component info available, requesting..."),parent.postMessage({pluginMessage:{type:"request-component-info"}},"*");let t=0;const n=20,l=()=>{t++,o.selectedComponent?(console.log("[openPropertyEditor] Component info received, proceeding with editor"),T(e)):t<n?setTimeout(l,50):(console.log("[openPropertyEditor] Timeout waiting for component info, proceeding with fallback"),T(e))};return void l()}T(e)}}function T(e){var t,l,s,a,r;try{if(function(){try{const e=n.propertyEditor;if(!e)return;let t=document.getElementById("dynamicPropertyFields");t||(t=document.createElement("div"),t.id="dynamicPropertyFields",e.insertBefore(t,e.querySelector(".property-actions")),console.log("[DEBUG] Created #dynamicPropertyFields at runtime"));let o=document.getElementById("colWidthContainer");if(o){const e=document.getElementById("colWidthInput");e&&(n.colWidthInput=e),n.colWidthContainer=o}else{o=document.createElement("div"),o.id="colWidthContainer",o.className="property-field",o.style.display="none";const t=document.createElement("label");t.htmlFor="colWidthInput",t.textContent="Column width";const l=document.createElement("input");l.type="number",l.id="colWidthInput",l.className="styled-input",l.min="1",l.placeholder="Enter width",o.appendChild(t),o.appendChild(l),e.insertBefore(o,e.querySelector(".property-actions")),n.colWidthContainer=o,n.colWidthInput=l,console.log("[DEBUG] Created #colWidthContainer and #colWidthInput at runtime")}}catch(e){console.error("[DEBUG] ensurePropertyEditorScaffold failed:",e)}}(),"cell"===o.applyMode||"column"===o.applyMode?(n.colWidthContainer.style.display="block",console.log(`[DEBUG] Initial: Showing column width option for ${o.applyMode} mode`)):(n.colWidthContainer.style.display="none",console.log(`[DEBUG] Initial: Hiding column width option for ${o.applyMode} mode`)),e.startsWith("header-")||"footer"===e){o.applyMode="cell",document.querySelectorAll(".apply-option").forEach(e=>e.classList.remove("active"));const e=document.querySelector('.apply-option[data-apply="cell"]');e&&e.classList.add("active")}else{o.applyMode="column",document.querySelectorAll(".apply-option").forEach(e=>e.classList.remove("active"));const e=document.querySelector('.apply-option[data-apply="column"]');e&&e.classList.add("active")}const p=document.querySelector(".apply-options");"footer"===e||e.startsWith("header-")?p&&(p.style.display="none"):p&&(p.style.display="");const m=document.querySelector('.apply-option[data-apply="cell"]'),u=document.querySelector('.apply-option[data-apply="row"]'),y=document.querySelector('.apply-option[data-apply="column"]');e.startsWith("header-")?(m&&(m.style.display="none"),u&&(u.style.display="none"),y&&(y.style.display="none")):(m&&(m.style.display="footer"===e||e.startsWith("header-")?"none":""),u&&(u.style.display="footer"===e||e.startsWith("header-")?"none":""),y&&(y.style.display="footer"===e||e.startsWith("header-")?"none":"")),console.log(`[DEBUG] Apply options visibility for ${e}:`,{cell:null==m?void 0:m.style.display,row:null==u?void 0:u.style.display,column:null==y?void 0:y.style.display});const h=document.querySelectorAll(".apply-option");console.log(`[DEBUG] Found ${h.length} apply options to attach listeners to`),h.forEach((e,t)=>{console.log(`[DEBUG] Attaching listener to option ${t}:`,e.textContent),e.removeEventListener("click",d),e.addEventListener("click",d),console.log("[DEBUG] Listener attached to:",e.textContent)}),o.currentEditingCell=e;let C=(null===(t=o.selectedComponent)||void 0===t?void 0:t.availableProperties)||[],f=(null===(l=o.selectedComponent)||void 0===l?void 0:l.propertyTypes)||{};console.log(`[DEBUG] Available properties for ${e}:`,C),console.log(`[DEBUG] Property types for ${e}:`,f),console.log("[DEBUG] Size property available:",C.includes("Size")),C.includes("Size")||(console.log("[DEBUG] Adding Size property as fallback"),C.push("Size"),f.Size="VARIANT");let b={},E="";const x=document.getElementById("staticPropertySection"),T=document.getElementById("bodyOnlyPropertySection");if(C.find(e=>e.toLowerCase().includes("second"))&&n.secondLineContainer&&(n.secondLineContainer.style.display="none"),e.startsWith("header-")||"footer"===e?(x&&(x.style.display="none"),T&&(T.style.display="none")):(x&&(x.style.display=""),T&&(T.style.display=""),b=g(e).properties||{},function(e,t,l){var s,a,i,c;const r=e.find(e=>"BOOLEAN"===t[e]&&(e.toLowerCase().includes("show")||e.toLowerCase().includes("text"))&&!e.toLowerCase().includes("slot")),d=e.find(e=>"TEXT"===t[e]&&e.toLowerCase().includes("text")&&!e.toLowerCase().includes("second")),p=e.find(e=>e.toLowerCase().includes("second")),m=e.find(e=>"BOOLEAN"===t[e]&&e.toLowerCase().includes("slot")),u=e.find(e=>"state"===e.toLowerCase()&&"VARIANT"===t[e]);if(p&&n.secondLineContainer&&(n.secondLineContainer.style.display="none"),n.showText){const e=n.showText.parentElement;e&&(e.style.display="none")}n.customCellTextToggle&&(n.customCellTextToggle.checked=!0,n.customCellTextContainer&&(n.customCellTextContainer.style.display=d?"none":"block",console.log("[DEBUG] Setting customCellTextContainer display to",d?"none":"block","in updateStaticFieldsVisibilityAndValues"))),console.log("[DEBUG] updateStaticFieldsVisibilityAndValues elements presence",{customCellText:!!n.customCellText,secondCellText:!!n.secondCellText,secondLineContainer:!!n.secondLineContainer,secondCellTextContainer:!!n.secondCellTextContainer,slotCheckbox:!!n.slotCheckbox,state:!!n.state}),n.secondLineContainer&&n.secondCellText&&n.customCellTextToggle&&(n.secondLineContainer.style.display=p?"none":n.secondCellText.value&&(null===(s=n.customCellTextToggle)||void 0===s?void 0:s.checked)?"":"none"),n.secondCellTextContainer&&n.secondCellText&&n.customCellTextToggle&&(n.secondCellTextContainer.style.display=p?"none":n.secondCellText.value&&(null===(a=n.customCellTextToggle)||void 0===a?void 0:a.checked)?"block":"none");const y=null===(i=n.slotCheckbox)||void 0===i?void 0:i.parentElement;y&&(y.style.display=m?"none":"");const g=null===(c=n.state)||void 0===c?void 0:c.parentElement;if(g&&(g.style.display=u?"none":""),n.showText&&(n.showText.checked=!r||l[r]||!1),n.customCellTextToggle&&(n.customCellTextToggle.checked=!0),n.customCellText)if(d&&l[d])n.customCellText.value=l[d];else if(o.selectedComponent&&o.selectedComponent.properties&&d){const e=o.selectedComponent.properties[d]||"Content";n.customCellText.value=e,n.customCellText.placeholder=`Default: ${e}`,console.log("[DEBUG] Setting custom cell text to component default:",e)}else n.customCellText.value="",n.customCellText.placeholder="Enter custom cell text";const h=p&&l[p]||"";n.secondCellText&&(n.secondCellText.value=h),n.secondTextLine&&(n.secondTextLine.checked=!!h),n.slotCheckbox&&(n.slotCheckbox.checked=m&&l[m]||!1),n.state&&(n.state.value=l.State||"Enabled"),n.generateSampleCheckbox&&(n.generateSampleCheckbox.checked=!1);const C=document.getElementById("fakerMethodInput");C&&(C.value=""),n.aiPromptContainer&&(n.aiPromptContainer.style.display="none"),n.customCellText&&(n.customCellText.disabled=!1),n.customCellTextToggle&&(n.customCellTextToggle.disabled=!1),n.secondLineContainer&&n.secondCellText&&n.secondCellTextContainer&&n.secondTextLine&&!p&&(n.secondLineContainer.style.display=n.secondCellText.value?"":"none",n.secondCellText.value||(n.secondTextLine.checked=!1,n.secondCellTextContainer.style.display="none"))}(C,f,b)),e.startsWith("header-")){const t=o.cellProperties.get(e);b=t&&t.properties?t.properties:{};for(const e of i)e.defaultValue&&void 0===b[e.name]&&(b[e.name]=e.defaultValue);E=`Header ${e.split("-")[1]}`,console.log("[DEBUG] openPropertyEditor header",{props:b}),v(i,b)}else if("footer"===e){const t=o.cellProperties.get(e);b=t&&t.properties?t.properties:{},E="Footer",console.log("[DEBUG] openPropertyEditor footer",{props:b}),v(c.filter(e=>"Type"===e.label),b)}else{b=g(e).properties||{};const[t,o]=e.split(",");E=`(${t},${o})`,console.log("[DEBUG] openPropertyEditor body",{availableProps:C,propertyTypes:f,props:b}),function(e,t,o){var n;const l=document.getElementById("dynamicPropertyFields");if(!l)return;l.innerHTML="",l.style.border="",l.style.background="";let s=0;console.log("[DEBUG] renderDynamicPropertyFields",{availableProps:e,propertyTypes:t,props:o});const a={"Cell text#12234:32":"Header Text",Size:"Size",State:"State",Sorted:"Sorted",Sortable:"Sortable","Total items#12006:49":"Total items","Current page#12006:39":"Current page","Total pages#12006:29":"Total pages",Type:"Type"},i={Size:["Extra large","Large","Small"],State:["Enabled","Disabled","Focus"],Sorted:["None","Ascending","Descending"],Sortable:["True","False"],Type:["Advanced","Simple"]};for(const c of e){if(c.toLowerCase().includes("cell text")&&!c.toLowerCase().includes("second"))continue;const e=t[c],r=a[c]||L(c),d=null!==(n=o[c])&&void 0!==n?n:"";let p=null;if("VARIANT"===e){p=document.createElement("div"),p.className="property-field";const e=document.createElement("select");e.className="styled-input",e.id=`dynamic-${c}`;const t=i[c]||[String(d)];for(const o of t){const t=document.createElement("option");t.value=o,t.textContent=o,String(d)===o&&(t.selected=!0),e.appendChild(t)}const o=document.createElement("label");o.textContent=r,p.appendChild(o),p.appendChild(e),r.toLowerCase().includes("show text")&&e.addEventListener("change",function(){const e=document.getElementById("dynamic-Cell text#12234:16");if(e){const t=e.parentElement;t&&(t.style.display="Cell text#12234:16"===this.value?"":"none")}}),r.toLowerCase().includes("second text line")&&e.addEventListener("change",function(){const e=document.getElementById("dynamic-Second cell text#105573:16");if(e){const t=e.parentElement;t&&(t.style.display="Second cell text#105573:16"===this.value?"":"none")}})}else if("BOOLEAN"===e){if(r.toLowerCase().includes("show text"))continue;p=document.createElement("div"),p.className="property-field checkbox";const e=document.createElement("input");e.type="checkbox",e.id=`dynamic-${c}`,e.checked=!!d;const t=document.createElement("label");t.textContent=r,p.appendChild(e),p.appendChild(t),r.toLowerCase().includes("show text")&&e.addEventListener("change",function(){const e=document.getElementById("dynamic-Cell text#12234:16");if(e){const t=e.parentElement;t&&(t.style.display=this.checked?"":"none")}}),r.toLowerCase().includes("second text line")&&e.addEventListener("change",function(){const e=document.getElementById("dynamic-Second cell text#105573:16");if(e){const t=e.parentElement;t&&(t.style.display=this.checked?"":"none")}})}else if("TEXT"===e){p=document.createElement("div"),p.className="property-field";const e=document.createElement("label");e.textContent=r;const t=document.createElement("input");t.type="text",t.className="styled-input",t.id=`dynamic-${c}`,t.value=d,p.appendChild(e),p.appendChild(t)}p&&(l.appendChild(p),s++)}const c=l.querySelector('input[type="text"][id^="dynamic-Cell text"]');if(c){const e=c.parentElement;e&&(e.style.display="")}const r=l.querySelector('input[type="checkbox"][id^="dynamic-Second text line"]'),d=l.querySelector('input[type="text"][id^="dynamic-Second cell text"]');if(r&&d){const e=d.parentElement;e&&(e.style.display=r.checked?"":"none")}r&&r.parentElement&&(r.parentElement.style.display=""),console.log("[DEBUG] renderDynamicPropertyFields created fields:",s)}(C,f,b)}let B;if(e.startsWith("header-")){const t=e.split("-")[1],l=Array.from({length:o.gridRows},(e,o)=>`${o+1},${t}`);for(const e of l){const t=o.cellProperties.get(e);if(t&&t.colWidth){B=t.colWidth;break}}void 0===B&&(B=(null===(s=o.headerCellComponent)||void 0===s?void 0:s.width)||100),console.log("[DEBUG] Header col width UI exists?",!!n.colWidthContainer,!!n.colWidthInput,"value to set:",B),n.colWidthContainer&&(n.colWidthContainer.style.display="block"),n.colWidthInput&&(n.colWidthInput.value=String(B)),console.log(`[DEBUG] Header cell ${e} - colWidth: ${B}, container display: ${n.colWidthContainer.style.display}`)}else if("footer"===e)B=(null===(a=o.footerComponent)||void 0===a?void 0:a.width)||100,console.log("[DEBUG] Footer col width UI exists?",!!n.colWidthContainer,!!n.colWidthInput,"value to set:",B),n.colWidthContainer&&(n.colWidthContainer.style.display="none"),n.colWidthInput&&(n.colWidthInput.value=String(B)),console.log(`[DEBUG] Footer cell - colWidth: ${B}, container display: ${n.colWidthContainer.style.display}`);else{const t=e.split(",")[1],l=Array.from({length:o.gridRows},(e,o)=>`${o+1},${t}`);for(const e of l){const t=o.cellProperties.get(e);if(t&&t.colWidth){B=t.colWidth;break}}void 0===B&&(B=(null===(r=o.selectedComponent)||void 0===r?void 0:r.width)||100),console.log("[DEBUG] Body col width UI exists?",!!n.colWidthContainer,!!n.colWidthInput,"value to set:",B,"for key",e),n.colWidthContainer&&(n.colWidthContainer.style.display="block"),n.colWidthInput&&(n.colWidthInput.value=String(B)),console.log(`[DEBUG] Body cell ${e} - colWidth: ${B}, container display: ${n.colWidthContainer.style.display}`)}n.propertyEditorTitle.innerHTML=`Cell Properties <span>${E}</span>`,n.editingCellCoords.textContent=E,n.propertyEditorOverlay.style.display="block",n.propertyEditor.style.display="block",e.startsWith("header-")||"footer"===e||n.customCellTextToggle&&n.customCellTextToggle.checked&&n.customCellTextContainer&&(n.customCellTextContainer.style.display="block",console.log("[DEBUG] Final check: Setting customCellTextContainer display to block for body cell")),setTimeout(()=>{n.propertyEditor.style.opacity="1"},10)}catch(e){console.error("Error in openPropertyEditor:",e),"undefined"!=typeof figma&&figma.notify("Failed to open property editor")}}window.addEventListener("DOMContentLoaded",()=>{var e;n.grid=document.getElementById("grid"),n.gridHighlight=document.getElementById("gridHighlight"),n.dimensionsDisplay=document.getElementById("dimensionsDisplay"),n.statusMessage=document.getElementById("statusMessage"),n.gridContainer=document.getElementById("gridContainer"),n.actionButtons=document.getElementById("actionButtons"),n.createTableBtn=document.getElementById("createTableBtn"),n.clearSelectionBtn=document.getElementById("clearSelectionBtn"),n.selectedCount=document.getElementById("selectedCount"),n.propertyEditor=document.getElementById("propertyEditor"),n.propertyEditorTitle=document.getElementById("propertyEditorTitle"),n.editingCellCoords=document.getElementById("editingCellCoords"),n.showText=document.getElementById("showText"),n.secondTextLine=document.getElementById("secondTextLine"),n.secondCellText=document.getElementById("secondCellText"),n.state=document.getElementById("state"),n.generateDataBtn=document.getElementById("generateDataBtn"),n.cancelPropsBtn=document.getElementById("cancelPropsBtn"),n.savePropsBtn=document.getElementById("savePropsBtn"),n.secondLineContainer=document.getElementById("secondLineContainer"),n.secondCellTextContainer=document.getElementById("secondCellTextContainer"),n.loader=document.getElementById("loader"),n.loaderText=document.getElementById("loaderText"),n.aiConfirmationDialog=document.getElementById("aiConfirmationDialog"),n.cancelAiBtn=document.getElementById("cancelAiBtn"),n.confirmAiBtn=document.getElementById("confirmAiBtn"),n.generateSampleCheckbox=document.getElementById("generateSampleCheckbox"),n.aiPromptContainer=document.getElementById("aiPromptContainer"),n.rowWidthInput=document.getElementById("rowWidthInput"),n.colWidthInput=document.getElementById("colWidthInput"),n.colWidthContainer=document.getElementById("colWidthContainer"),n.slotCheckbox=document.getElementById("slotCheckbox"),n.customCellTextToggle=document.getElementById("customCellTextToggle"),n.customCellText=document.getElementById("customCellText"),n.customCellTextContainer=document.getElementById("customCellTextContainer"),n.landingPage=document.getElementById("landingPage"),n.componentModeBtn=document.getElementById("componentModeBtn"),n.propertyEditorOverlay=document.getElementById("propertyEditorOverlay"),n.scanTableSection=null,n.scanTableBtn=null,n.scanTableInstructions=null,n.componentDisplay=document.getElementById("componentDisplay"),n.scanOptionsContainer=null,a=!0,parent.postMessage({pluginMessage:{type:"scan-table"}},"*"),r();const t=document.getElementById("useSinglePrompt"),l=document.getElementById("singlePromptContainer"),s=document.getElementById("generateTableFromPromptBtn");null==t||t.addEventListener("change",()=>{l&&(l.style.display=t.checked?"block":"none")}),null==s||s.addEventListener("click",()=>{var e,t,n,l,s,a,i,c,r;const d=parseInt((null===(e=document.getElementById("scanRowsInput"))||void 0===e?void 0:e.value)||String(o.gridRows),10),p=parseInt((null===(t=document.getElementById("scanColsInput"))||void 0===t?void 0:t.value)||String(o.gridCols),10),m=(null===(n=document.getElementById("scanHeaderToggle"))||void 0===n||n.checked,null===(l=document.getElementById("scanFooterToggle"))||void 0===l||l.checked,null===(s=document.getElementById("scanSelectableToggle"))||void 0===s||s.checked,null===(a=document.getElementById("scanExpandableToggle"))||void 0===a||a.checked,null===(c=null===(i=document.getElementById("singlePromptText"))||void 0===i?void 0:i.value)||void 0===c?void 0:c.trim());if(!m)return void b("Enter a prompt","error");const u=((null===(r=document.getElementById("spApiKey"))||void 0===r?void 0:r.value)||"").trim();u?(console.log("=== DEBUG: UI sending generate-table-with-ai message ==="),console.log("Prompt:",m),console.log("Rows:",d),console.log("Cols:",p),console.log("API Key length:",u.length),console.log("=== END DEBUG ==="),parent.postMessage({pluginMessage:{type:"generate-table-with-ai",prompt:m,apiKey:u,rows:d,cols:p}},"*")):b("Provide IBM Cloud API key","error")}),function(){n.clearSelectionBtn.addEventListener("click",u),n.createTableBtn.addEventListener("click",h),n.cancelPropsBtn.addEventListener("click",y),n.propertyEditorOverlay.addEventListener("click",y),n.savePropsBtn.addEventListener("click",w),n.customCellTextToggle.addEventListener("change",function(){const e=this.checked;n.customCellTextContainer.style.display=e?"block":"none",e?n.secondLineContainer.style.display="flex":(n.secondLineContainer.style.display="none",n.secondTextLine&&(n.secondTextLine.checked=!1,n.secondCellTextContainer.style.display="none"))}),n.secondTextLine.addEventListener("change",function(){n.secondCellTextContainer.style.display=this.checked?"block":"none"}),document.querySelectorAll(".apply-option").forEach(e=>{e.addEventListener("click",d)}),n.generateSampleCheckbox.addEventListener("change",()=>{const e=n.generateSampleCheckbox.checked;n.customCellText.disabled=e,n.aiPromptContainer.style.display=e?"block":"none",n.customCellTextToggle.disabled=e});const e=document.getElementById("aiSource"),t=document.getElementById("fakerConfig"),l=document.getElementById("watsonxConfig");null==e||e.addEventListener("change",()=>{const o=e.value;t&&(t.style.display="faker"===o?"block":"none"),l&&(l.style.display="watsonx"===o?"block":"none")}),parent.postMessage({pluginMessage:{type:"load-watsonx-settings"}},"*"),document.addEventListener("mouseover",function(e){const t=e.target;t.classList.contains("cell")&&function(e){var t;const n=`${e.dataset.row},${e.dataset.col}`,l=o.cellProperties.get(n),s=(null===(t=o.selectedComponent)||void 0===t?void 0:t.availableProperties)||[];l&&l.properties&&Object.keys(l.properties).length>0?(clearTimeout(o.hoverTimeout),o.hoverTimeout=window.setTimeout(()=>{let t="",n=s.find(e=>e.toLowerCase().includes("text")&&!e.toLowerCase().includes("second"));n||(n=Object.keys(l.properties).find(e=>e.toLowerCase().includes("text")&&!e.toLowerCase().includes("second"))||"cellText");let a=s.find(e=>e.toLowerCase().includes("second"))||Object.keys(l.properties).find(e=>e.toLowerCase().includes("second"))||"secondCellText",i=s.find(e=>e.toLowerCase().includes("showtext"))||Object.keys(l.properties).find(e=>e.toLowerCase().includes("showtext"))||"showText",c=s.find(e=>e.toLowerCase().includes("state"))||Object.keys(l.properties).find(e=>e.toLowerCase().includes("state"))||"state";l.properties[i]&&(t+=`<strong>Text:</strong> ${l.properties[n]||"Empty"}<br>`),(l.properties.secondTextLine||l.properties[a])&&(t+=`<strong>Second line:</strong> ${l.properties[a]||"Empty"}<br>`),t+=`<strong>State:</strong> ${l.properties[c]||"Enabled"}<br>`,o.tooltip.innerHTML=t,o.tooltip.style.display="block";const r=e.getBoundingClientRect();o.tooltip.style.left=`${r.left}px`,o.tooltip.style.top=`${r.bottom+5}px`},300)):E()}(t)}),document.addEventListener("mouseout",function(e){e.target.classList.contains("cell")&&E()})}(),p("selection"),"column"===o.applyMode&&n.colWidthInput&&(n.colWidthInput.style.display="inline-block"),null===(e=o.selectedComponent)||void 0===e||e.width,n.componentModeBtn.onclick=()=>{n.landingPage.style.display="none"}});let B=null;function w(){return e=this,t=void 0,a=function*(){var e,t,s,a,r;try{if(!o.currentEditingCell)return;const d=o.currentEditingCell;let p=(null===(e=o.selectedComponent)||void 0===e?void 0:e.availableProperties)||[],m=(null===(t=o.selectedComponent)||void 0===t?void 0:t.propertyTypes)||{};if(d.startsWith("header-")){const e={};for(const t of i){const{name:o,type:n,defaultValue:l}=t,s=document.getElementById(`dynamic-${o}`);s&&(e[o]="BOOLEAN"===n?s.checked:s.value||l||"")}let t;n.colWidthInput&&n.colWidthInput.value?t=parseInt(n.colWidthInput.value,10):console.log("[DEBUG] colWidthInput missing or empty when saving cell (footer)");const l=g(d);if(l.properties=e,t){const e=d.split("-")[1],n=Array.from({length:o.gridRows},(t,o)=>`${o+1},${e}`);for(const e of n)g(e).colWidth=t;l.colWidth=t}console.log("[DEBUG] saveCellProperties header",d,e,"colWidth:",t),o.cellProperties.set(d,l)}else if("footer"===d){const e={};for(const t of c){const{name:o,type:n}=t,l=document.getElementById(`dynamic-${o}`);l&&(e[o]="BOOLEAN"===n?l.checked:l.value)}const t=g(d);t.properties=e,console.log("[DEBUG] saveCellProperties footer",d,e),o.cellProperties.set(d,t)}else if("footer"===d){const e={};for(const t of c){const{name:o,type:n}=t,l=document.getElementById(`dynamic-${o}`);l&&(e[o]="BOOLEAN"===n?l.checked:l.value)}const t=g(d);t.properties=e,console.log("[DEBUG] saveCellProperties footer",d,e),o.cellProperties.set(d,t)}else{const e={},t=(p.some(e=>"BOOLEAN"===m[e]&&(e.toLowerCase().includes("show")||e.toLowerCase().includes("text"))&&!e.toLowerCase().includes("slot")),p.some(e=>"TEXT"===m[e]&&e.toLowerCase().includes("text")&&!e.toLowerCase().includes("second")),p.some(e=>e.toLowerCase().includes("second")),p.some(e=>e.toLowerCase().includes("slot")),p.some(e=>"state"===e.toLowerCase()&&"VARIANT"===m[e])),i=n.customCellTextToggle.checked,c=n.generateSampleCheckbox.checked,u=p.find(e=>"BOOLEAN"===m[e]&&e.toLowerCase().includes("show")&&e.toLowerCase().includes("text"));if(!u||i||c?u&&(i||c)&&(e[u]=!0,console.log("[DEBUG] Turning on Show text property:",u)):(e[u]=!1,console.log("[DEBUG] Turning off Show text property:",u)),i&&n.customCellText.value){let t=p.find(e=>"TEXT"===m[e]&&e.toLowerCase().includes("text")&&!e.toLowerCase().includes("second"))||p.find(e=>e.toLowerCase().includes("text"))||"Cell text#12234:16";e[t]=n.customCellText.value,console.log("[DEBUG] Saving custom cell text:",n.customCellText.value,"to property:",t)}i&&n.secondTextLine.checked&&n.secondCellText.value&&(e[p.find(e=>e.toLowerCase().includes("second"))||"secondCellText"]=n.secondCellText.value),t||(e.State=n.state.value);for(const t of p){const o=m[t],n=document.getElementById(`dynamic-${t}`);n&&(e[t]="BOOLEAN"===o?n.checked:n.value,t.toLowerCase().includes("slot")&&console.log(`🔍 UI: Saving Slot property: ${t} = ${e[t]} (type: ${o})`))}let y;n.colWidthInput&&n.colWidthInput.value?y=parseInt(n.colWidthInput.value,10):console.log("[DEBUG] colWidthInput missing or empty when saving cell (body)");const h=(e,t,o)=>{const n=g(e),l=Object.assign({},n);n.properties=t,void 0!==l.isCheckbox&&(n.isCheckbox=l.isCheckbox),void 0!==o?n.colWidth=o:delete n.colWidth},[C,f]=d.split(",").map(Number);if("cell"===o.applyMode)y&&1===C?h(o.currentEditingCell,e,y):h(o.currentEditingCell,e);else if("row"===o.applyMode)for(let t=1;t<=o.gridCols;t++){const n=`${C},${t}`;if(o.selectedCells.has(n)){y&&1===C?h(n,Object.assign({},e),y):h(n,Object.assign({},e));const t=g(n);void 0!==t.isCheckbox&&(t.isCheckbox=t.isCheckbox)}}else if("column"===o.applyMode)for(let t=1;t<=o.gridRows;t++){const n=`${t},${f}`;if(o.selectedCells.has(n)){y&&1===t?h(n,Object.assign({},e),y):h(n,Object.assign({},e));const o=g(n);void 0!==o.isCheckbox&&(o.isCheckbox=o.isCheckbox)}}const E=n.generateSampleCheckbox.checked,v=(null===(s=document.getElementById("aiSource"))||void 0===s?void 0:s.value)||"faker",x=l.value.trim();if(E&&"faker"===v&&x){let e=1,t="cell";return"row"===o.applyMode?(e=o.gridCols,t="row"):"column"===o.applyMode&&(e=o.gridRows,t="column"),B={mode:t,key:d,fakerMethod:x},void parent.postMessage({pluginMessage:{type:"generate-fake-data",dataType:x,count:e}},"*")}if(E&&"watsonx"===v){let e=1,t="cell";"row"===o.applyMode?(e=o.gridCols,t="row"):"column"===o.applyMode&&(e=o.gridRows,t="column");const n=(null===(a=document.getElementById("watsonxPrompt"))||void 0===a?void 0:a.value)||"Generate short realistic values",l="https://us-south.ml.cloud.ibm.com",s=(null===(r=document.getElementById("watsonxApiKey"))||void 0===r?void 0:r.value)||"",i=!1,c="";if(!s)return void b("Provide IBM Cloud API key","error");const p=!0,m=!0,u="http://localhost:3000";return B={mode:t,key:d,fakerMethod:"watsonx"},void parent.postMessage({pluginMessage:{type:"generate-watsonx-data",prompt:n,endpoint:l,apiKey:s,accessToken:c,useAccessToken:i,useProxy:m,proxyUrl:u,count:e,remember:p}},"*")}}y(),I(),document.querySelectorAll(".cell").forEach(e=>{const t=e,n=`${t.dataset.row},${t.dataset.col}`;o.selectedCells.has(n)&&t.classList.add("selected")})}catch(e){console.error("Error saving properties:",e),"undefined"!=typeof figma&&figma.notify("Failed to save properties")}},new((s=void 0)||(s=Promise))(function(o,n){function l(e){try{c(a.next(e))}catch(e){n(e)}}function i(e){try{c(a.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof s?t:new s(function(e){e(t)})).then(l,i)}c((a=a.apply(e,t||[])).next())});var e,t,s,a}function I(){var e,t,n;const l=(null===(e=o.selectedComponent)||void 0===e?void 0:e.availableProperties)||[];console.log("[updateCellVisuals] availableProps:",l),console.log("[updateCellVisuals] selectedComponent:",o.selectedComponent),document.querySelectorAll(".cell").forEach(e=>{const t=e,n=`${t.dataset.row},${t.dataset.col}`,s=o.cellProperties.get(n);if(console.log(`[updateCellVisuals] Cell ${n}:`,s),s&&s.properties&&Object.keys(s.properties).length>0){let e="";if(o.selectedComponent&&l.length>0){for(const t of l)if("TEXT"===o.selectedComponent.propertyTypes[t]&&s.properties[t]){e+=s.properties[t];break}const t=l.find(e=>e.toLowerCase().includes("slot"))||"slot";!e&&s.properties[t]&&(e="")}else{const t=Object.keys(s.properties).filter(e=>e.toLowerCase().includes("text")&&!e.toLowerCase().includes("second")&&s.properties[e]&&"string"==typeof s.properties[e]&&""!==s.properties[e].trim());t.length>0&&(e=s.properties[t[0]]);const o=Object.keys(s.properties).filter(e=>e.toLowerCase().includes("slot"));!e&&o.length>0&&s.properties[o[0]]&&(e="")}e?(t.classList.add("edited"),t.style.fontWeight="bold"):(e=`${t.dataset.row},${t.dataset.col}`,t.classList.remove("edited"),t.style.fontWeight="normal"),t.textContent=e}else t.textContent=`${t.dataset.row},${t.dataset.col}`,t.classList.remove("edited"),t.style.fontWeight="normal"});const s=document.getElementById("headerGrid");if(s)for(let e=1;e<=o.gridCols;e++){const l=s.querySelector(`.header-cell:nth-child(${e})`);if(l){const s=`header-${e}`,a=o.cellProperties.get(s),i=(null===(t=o.selectedComponent)||void 0===t?void 0:t.availableProperties)||[],c=(null===(n=o.selectedComponent)||void 0===n?void 0:n.propertyTypes)||{},r=i.find(e=>"TEXT"===c[e])||"Cell text",d=a&&a.properties?a.properties[r]:"";d&&"string"==typeof d&&d.trim().length>0?(l.textContent=d,l.classList.add("edited"),l.style.fontWeight="bold"):(l.textContent=`H${e}`,l.classList.remove("edited"),l.style.fontWeight="normal")}}const a=document.getElementById("footerGrid");if(a){const e=a.querySelector(".footer-cell");if(e){const t=o.cellProperties.get("footer");if(t&&t.properties){const o=t.properties["Total items#12006:49"]||t.properties["Current page#12006:39"]||t.properties["Total pages#12006:29"]||"Footer";e.textContent=o,e.classList.add("edited"),e.style.fontWeight="Footer"!==o?"bold":"normal"}else e.textContent="Footer",e.classList.remove("edited"),e.style.fontWeight="normal"}}}function k(){n.createTableBtn.disabled=!o.sizeConfirmed}function L(e){return e.split("#")[0].trim()}window.onmessage=e=>{var t,l,s,i,c,d,u,h,E,v;if(!a||!n.grid)return;const x=e.data.pluginMessage;if(x)switch(console.log(`[UI] Received message: ${x.type}`,x),x.type){case"ai-table-response":{f();const e=(x.headers||[]).map(String),s=Array.isArray(x.rows)?x.rows.map(e=>Array.isArray(e)?e.map(String):[]):[];if(!e.length||!s.length){b("AI did not return usable table data.","error");break}const a=e=>{if(!e)return"";let t=String(e).trim();if(t=t.replace(/^```[a-zA-Z]*\n?|```$/g,"").trim(),t.includes(":")){const e=t.split(":");t=e[e.length-1]}return t=t.replace(/[\[\]\{\}]/g,"").replace(/^"|"$/g,"").replace(/^'|'$/g,""),t=t.trim().replace(/^"|"$/g,"").replace(/^'|'$/g,""),t=t.replace(/\s+/g," ").trim(),t},i=o.gridRows,c=o.gridCols,d=[];for(let t=0;t<c;t++)d.push(a(e[t]||`Column ${t+1}`));const p=[];for(let e=0;e<i;e++){const t=s[e]||[],o=[];for(let e=0;e<c;e++)o.push(a(t[e]||""));p.push(o)}r(),n.gridContainer.style.display="flex",n.actionButtons.style.display="flex";const m=(null===(t=o.selectedComponent)||void 0===t?void 0:t.availableProperties)||[],u=(null===(l=o.selectedComponent)||void 0===l?void 0:l.propertyTypes)||{},y=m.find(e=>"TEXT"===u[e])||"Cell text";for(let e=1;e<=c;e++)g(`header-${e}`).properties[y]=d[e-1]||`H${e}`;for(let e=0;e<i;e++)for(let t=0;t<c;t++)g(`${e+1},${t+1}`).properties[y]=p[e][t]||"";I(),n.createTableBtn&&(n.createTableBtn.disabled=!1),b(`AI content applied (clamped to ${i} rows x ${c} cols). Review/edit then click Create Table.`,"success");break}case"table-selected":o.hasComponent=!0,b("Selected: Data table","success"),n.gridContainer.style.display="none",n.actionButtons.style.display="none",C("Scanning table..."),setTimeout(()=>{parent.postMessage({pluginMessage:{type:"scan-table"}},"*")},100);break;case"component-selected":o.cellProperties.clear(),o.selectedCells.clear(),o.currentEditingCell=null,o.sizeConfirmed=!1,o.tableFrameId=void 0,console.log("[DEBUG] Reset state for new component selection"),o.hasComponent=x.isValidComponent,b(x.isValidComponent?`Selected: ${x.componentName}`:"Please select a component.",x.isValidComponent?"success":"error"),n.gridContainer.style.display="none",n.actionButtons.style.display="none",o.selectedComponent={id:x.componentId,name:x.componentName,width:x.componentWidth,properties:x.properties||{},availableProperties:x.availableProperties||[],propertyTypes:x.propertyTypes||{}},x.isValidComponent&&(C("Scanning table..."),parent.postMessage({pluginMessage:{type:"scan-table"}},"*"));break;case"selection-cleared":o.hasComponent=!1,o.tableFrameId||(b("Please select a table cell component.","error"),n.gridContainer.style.display="none",n.actionButtons.style.display="none",o.selectedComponent=null,n.landingPage.style.display="block");break;case"table-created":f(),x.isComponent?b("Table component created successfully! You can now reuse it.","success"):b("Table created successfully!","success"),n.landingPage.style.display="flex",n.componentModeBtn.style.display="inline-block",n.gridContainer.style.display="none",n.actionButtons.style.display="none",n.propertyEditor.style.display="none",o.cellProperties.clear(),n.createTableBtn.textContent="Create Table",o.tableFrameId=void 0;break;case"fake-data-response":f();const e=x.data;if(console.log("[DEBUG] Received fake-data-response",e),!Array.isArray(e)||0===e.length)return void b("No data generated.","error");if(B){const{mode:t,key:n,fakerMethod:l}=B,a=(null===(s=o.selectedComponent)||void 0===s?void 0:s.availableProperties)||[],c=(null===(i=o.selectedComponent)||void 0===i?void 0:i.propertyTypes)||{},r=(e,t)=>{const n=g(e),l=a.find(e=>"TEXT"===c[e]),s=a.find(e=>"BOOLEAN"===c[e]&&(e.toLowerCase().includes("show")||e.toLowerCase().includes("text"))&&!e.toLowerCase().includes("slot"));l&&(n.properties[l]=t,console.log(`🔄 Applied AI data to cell ${e}: "${t}"`)),s&&(n.properties[s]=!0),o.selectedCells.add(e)};if("cell"===t)r(n,e[0]);else if("row"===t){const[t]=n.split(",").map(Number);for(let n=1;n<=o.gridCols;n++)r(`${t},${n}`,e[(n-1)%e.length])}else if("column"===t){const[,t]=n.split(",").map(Number);for(let n=1;n<=o.gridRows;n++)r(`${n},${t}`,e[(n-1)%e.length])}B=null,I(),y(),document.querySelectorAll(".cell").forEach(e=>{const t=e,n=`${t.dataset.row},${t.dataset.col}`;o.selectedCells.has(n)&&t.classList.add("selected")})}break;case"watsonx-data-response":f();const a=x.data;if(!Array.isArray(a)||0===a.length){b("No data generated from watsonx.ai.","error");break}if(B){const{mode:e,key:t}=B,n=(null===(c=o.selectedComponent)||void 0===c?void 0:c.availableProperties)||[],l=(null===(d=o.selectedComponent)||void 0===d?void 0:d.propertyTypes)||{},s=(e,t)=>{const s=g(e),a=n.find(e=>"TEXT"===l[e]),i=n.find(e=>"BOOLEAN"===l[e]&&(e.toLowerCase().includes("show")||e.toLowerCase().includes("text"))&&!e.toLowerCase().includes("slot"));a&&(s.properties[a]=t),i&&(s.properties[i]=!0),o.selectedCells.add(e)};if("cell"===e)s(t,a[0]);else if("row"===e){const[e]=t.split(",").map(Number);for(let t=1;t<=o.gridCols;t++)s(`${e},${t}`,a[(t-1)%a.length])}else if("column"===e){const[,e]=t.split(",").map(Number);for(let t=1;t<=o.gridRows;t++)s(`${t},${e}`,a[(t-1)%a.length])}B=null,I(),y(),document.querySelectorAll(".cell").forEach(e=>{const t=e,n=`${t.dataset.row},${t.dataset.col}`;o.selectedCells.has(n)&&t.classList.add("selected")})}break;case"prompt-fallback-notice":b(`Could not find a specific category for "${x.prompt}". Using general text.`,"error");break;case"creation-error":f(),b(`Error: ${x.message}`,"error");break;case"component-properties":o.hasComponent=!0,o.componentProps=x.props,o.selectedComponent=x.component,o.componentWidth=x.component.width,n.statusMessage.textContent=`Selected component: ${x.component.name}`,n.statusMessage.className="status success",n.gridContainer.style.display="flex";break;case"scan-table":console.log("[PLUGIN] Received scan-table message from UI"),figma.ui.postMessage({type:"scan-table-result",success:!0,message:"Scan complete (placeholder)."}),console.log("[PLUGIN] Sent scan-table-result back to UI");break;case"scan-table-result":if(f(),n.scanTableBtn&&(n.scanTableBtn.disabled=!1,n.scanTableBtn.textContent="Scan Table"),b(x.message,x.success?"success":"error"),!x.success)return;o.cellProperties.clear(),o.selectedCells.clear(),o.currentEditingCell=null,o.sizeConfirmed=!1,o.tableFrameId=void 0,console.log("[DEBUG] Reset state for new table generation"),n.landingPage.style.display="none",n.scanTableSection&&(n.scanTableSection.style.display="none");const T=x.details;if(!T.bodyCellComponent)return b("Could not find a body cell template in the scanned table.","error"),void(n.scanTableSection&&(n.scanTableSection.style.display="flex"));o.selectedComponent=T.bodyCellComponent,o.hasComponent=!0,o.headerCellComponent=T.headerCellComponent||null,o.footerComponent=T.footerComponent||null,console.log("Component template set from scan:",o.selectedComponent),o.gridCols=T.numCols||5,o.gridRows=5,r(),document.querySelectorAll(".cell").forEach(e=>{const t=`${e.dataset.row},${e.dataset.col}`;o.selectedCells.add(t),e.classList.add("selected")}),o.sizeConfirmed=!0,n.gridContainer.style.display="flex",n.actionButtons.style.display="flex";let w=document.getElementById("scanOptionsContainer");w&&w.remove(),w=document.createElement("div"),w.id="scanOptionsContainer",w.style.display="flex",w.style.flexDirection="column",w.style.alignItems="flex-start",w.style.marginBottom="12px",w.style.gap="0px",w.innerHTML=`\n          <div style="display: flex; align-items: center; gap: 10px; flex-wrap: wrap; margin-bottom: 8px; width: 100%; justify-content: flex-start;">\n              <label style="margin-right: 8px;">Rows: <input type="number" id="scanRowsInput" class="styled-input" value="${o.gridRows}" min="1" style="width: 60px;"></label>\n              <label>Cols: <input type="number" id="scanColsInput" class="styled-input" value="${o.gridCols}" min="1" style="width: 60px;"></label>\n          </div>\n          <div style="display: flex; align-items: center; gap: 10px; flex-wrap: wrap; margin-bottom: 8px;">\n              <input type="checkbox" id="scanHeaderToggle" checked> <label for="scanHeaderToggle" style="margin-right: 16px;">Header</label>\n              <input type="checkbox" id="scanFooterToggle" ${T.footer?"checked":""}> <label for="scanFooterToggle" style="margin-right: 16px;">Footer</label>\n          </div>\n          <div style="display: flex; align-items: center; gap: 10px; flex-wrap: wrap; margin-bottom: 8px;">\n              <input type="checkbox" id="scanSelectableToggle"> <label for="scanSelectableToggle" style="margin-right: 16px;">Selectable</label>\n              <input type="checkbox" id="scanExpandableToggle"> <label for="scanExpandableToggle">Expandable</label>\n          </div>\n      `,n.gridContainer.insertBefore(w,n.gridContainer.firstChild),n.scanOptionsContainer=w;const L=()=>{const e=parseInt(document.getElementById("scanRowsInput").value,10),t=parseInt(document.getElementById("scanColsInput").value,10);if(e!==o.gridRows||t!==o.gridCols){o.gridRows=e,o.gridCols=t,r(),document.querySelectorAll(".cell").forEach(e=>{const t=`${e.dataset.row},${e.dataset.col}`;o.selectedCells.add(t),e.classList.add("selected")});for(const e of Array.from(o.cellProperties.keys())){const t=e.match(/^([0-9]+),([0-9]+)$/);if(t){const n=parseInt(t[1],10),l=parseInt(t[2],10);(n>o.gridRows||l>o.gridCols)&&o.cellProperties.delete(e)}e.startsWith("header-")&&parseInt(e.split("-")[1],10)>o.gridCols&&o.cellProperties.delete(e)}I()}};null===(u=document.getElementById("scanRowsInput"))||void 0===u||u.addEventListener("change",L),null===(h=document.getElementById("scanColsInput"))||void 0===h||h.addEventListener("change",L);const S=document.getElementById("scanHeaderToggle"),$=document.getElementById("scanFooterToggle"),P=document.getElementById("headerGrid"),A=document.getElementById("footerGrid"),W=()=>{P&&(P.style.display=S.checked?"grid":"none"),A&&(A.style.display=$.checked?"grid":"none")};W(),null==S||S.addEventListener("change",W),null==$||$.addEventListener("change",W),n.createTableBtn.textContent="Create Table",n.createTableBtn.disabled=!1,p("edit"),k();break;case"edit-existing-table":console.log("[UI] Processing edit-existing-table with settings:",x.settings),console.log("[UI] cellProperties keys:",Object.keys(x.settings.cellProperties||{}));const D=x.settings;if(!D)return;o.tableFrameId=x.tableId,o.selectedCells.clear(),o.sizeConfirmed=!1,o.currentEditingCell=null,o.hasComponent=!0,n.landingPage.style.display="none",n.gridContainer.style.display="flex",n.actionButtons.style.display="flex",console.log(`[UI] Showing grid and action buttons. Grid display: ${n.gridContainer.style.display}, Action buttons display: ${n.actionButtons.style.display}`),o.gridRows=D.rows||5,o.gridCols=D.columns||5;const U=new Map;if(D.cellProperties&&Object.entries(D.cellProperties).forEach(([e,t])=>{if("footer"===e)U.set(e,t);else if(e.startsWith("header-"))U.set(e,t);else if(e.includes("-")){const[o,n]=e.split("-").map(Number),l=`${o+1},${n+1}`;U.set(l,t)}}),o.cellProperties=U,console.log("[UI] Converted cell properties:",Array.from(U.keys())),r(),console.log("[UI] Requesting component info from backend..."),parent.postMessage({pluginMessage:{type:"request-component-info"}},"*"),setTimeout(()=>{I()},100),!n.scanOptionsContainer){const e=document.createElement("div");e.id="scanOptionsContainer",e.style.display="flex",e.style.flexDirection="column",e.style.alignItems="flex-start",e.style.marginBottom="12px",e.style.gap="0px",e.innerHTML=`\n            <div style="display: flex; align-items: center; gap: 10px; flex-wrap: wrap; margin-bottom: 8px; width: 100%; justify-content: flex-start;">\n                <label style="margin-right: 8px;">Rows: <input type="number" id="scanRowsInput" class="styled-input" value="${o.gridRows}" min="1" style="width: 60px;"></label>\n                <label>Cols: <input type="number" id="scanColsInput" class="styled-input" value="${o.gridCols}" min="1" style="width: 60px;"></label>\n            </div>\n            <div style="display: flex; align-items: center; gap: 10px; flex-wrap: wrap; margin-bottom: 8px;">\n                <input type="checkbox" id="scanHeaderToggle" ${D.includeHeader?"checked":""}> <label for="scanHeaderToggle" style="margin-right: 16px;">Header</label>\n                <input type="checkbox" id="scanFooterToggle" ${D.includeFooter?"checked":""}> <label for="scanFooterToggle" style="margin-right: 16px;">Footer</label>\n            </div>\n            <div style="display: flex; align-items: center; gap: 10px; flex-wrap: wrap; margin-bottom: 8px;">\n                <input type="checkbox" id="scanSelectableToggle" ${D.includeSelectable?"checked":""}> <label for="scanSelectableToggle" style="margin-right: 16px;">Selectable</label>\n                <input type="checkbox" id="scanExpandableToggle" ${D.includeExpandable?"checked":""}> <label for="scanExpandableToggle">Expandable</label>\n            </div>\n        `,n.gridContainer.insertBefore(e,n.gridContainer.firstChild),n.scanOptionsContainer=e;const t=()=>{const e=parseInt(document.getElementById("scanRowsInput").value,10),t=parseInt(document.getElementById("scanColsInput").value,10);if(e!==o.gridRows||t!==o.gridCols){o.gridRows=e,o.gridCols=t,r(),document.querySelectorAll(".cell").forEach(e=>{const t=`${e.dataset.row},${e.dataset.col}`;o.selectedCells.add(t),e.classList.add("selected")});for(const e of Array.from(o.cellProperties.keys())){const t=e.match(/^([0-9]+),([0-9]+)$/);if(t){const n=parseInt(t[1],10),l=parseInt(t[2],10);(n>o.gridRows||l>o.gridCols)&&o.cellProperties.delete(e)}e.startsWith("header-")&&parseInt(e.split("-")[1],10)>o.gridCols&&o.cellProperties.delete(e)}I()}};null===(E=document.getElementById("scanRowsInput"))||void 0===E||E.addEventListener("change",t),null===(v=document.getElementById("scanColsInput"))||void 0===v||v.addEventListener("change",t);const l=document.getElementById("scanHeaderToggle"),s=document.getElementById("scanFooterToggle"),a=document.getElementById("headerGrid"),i=document.getElementById("footerGrid"),c=()=>{a&&(a.style.display=l.checked?"grid":"none"),i&&(i.style.display=s.checked?"grid":"none")};c(),null==l||l.addEventListener("change",c),null==s||s.addEventListener("change",c)}document.querySelectorAll(".cell").forEach(e=>{const t=`${e.dataset.row},${e.dataset.col}`;o.selectedCells.add(t),e.classList.add("selected")}),o.sizeConfirmed=!0,n.createTableBtn.textContent="Update Table",n.createTableBtn.disabled=!1,console.log(`[UI] Set button text to: ${n.createTableBtn.textContent}, disabled: ${n.createTableBtn.disabled}`),console.log(`[UI] State: hasComponent=${o.hasComponent}, sizeConfirmed=${o.sizeConfirmed}`),m(),p("edit"),k();break;case"table-updated":f(),b("Table updated successfully!","success"),n.createTableBtn.textContent="Update Table";break;case"component-info":console.log("[UI] Received component info:",x.component),x.component?(o.selectedComponent=x.component,I()):(console.log("[UI] No component info received, using fallback for cell properties"),I());break;case"watsonx-settings":{const{apiKeyMasked:e,endpoint:t}=x,o=document.getElementById("watsonxEndpoint"),n=document.getElementById("watsonxApiKey");o&&t&&(o.value=t),n&&e&&(n.placeholder=e)}}},l.addEventListener("input",()=>{console.log(`[UI] Found ${e.length} total methods from import.`);const t=l.value.toLowerCase();if(!t)return void(s.style.display="none");const o=e.filter(e=>e.toLowerCase().includes(t));s.innerHTML="",o.slice(0,100).forEach(e=>{const t=document.createElement("a");t.href="#",t.textContent=e,t.onclick=t=>{t.preventDefault(),l.value=e,s.style.display="none"},s.appendChild(t)}),s.style.display="block"}),document.addEventListener("click",e=>{s&&!s.contains(e.target)&&e.target!==l&&(s.style.display="none")}),parent.postMessage({pluginMessage:{type:"request-selection-state"}},"*"),"column"===o.applyMode&&n.colWidthInput&&(n.colWidthInput.style.display="inline-block"),null===(t=o.selectedComponent)||void 0===t||t.width})();